#include "clmanager.h"


CLManager::CLManager()
{
	m_errors[-CL_SUCCESS] = "CL_SUCCESS";
	m_errors[-CL_DEVICE_NOT_FOUND] = "CL_DEVICE_NOT_FOUND";
	m_errors[-CL_DEVICE_NOT_AVAILABLE] = "CL_DEVICE_NOT_AVAILABLE";
	m_errors[-CL_COMPILER_NOT_AVAILABLE] = "CL_COMPILER_NOT_AVAILABLE";
	m_errors[-CL_MEM_OBJECT_ALLOCATION_FAILURE] = "CL_MEM_OBJECT_ALLOCATION_FAILURE";
	m_errors[-CL_OUT_OF_RESOURCES] = "CL_OUT_OF_RESOURCES";
	m_errors[-CL_OUT_OF_HOST_MEMORY] = "CL_OUT_OF_HOST_MEMORY";
	m_errors[-CL_PROFILING_INFO_NOT_AVAILABLE] = "CL_PROFILING_INFO_NOT_AVAILABLE";
	m_errors[-CL_MEM_COPY_OVERLAP] = "CL_MEM_COPY_OVERLAP";
	m_errors[-CL_IMAGE_FORMAT_MISMATCH] = "CL_IMAGE_FORMAT_MISMATCH";
	m_errors[-CL_IMAGE_FORMAT_NOT_SUPPORTED] = "CL_IMAGE_FORMAT_NOT_SUPPORTED";
	m_errors[-CL_BUILD_PROGRAM_FAILURE] = "CL_BUILD_PROGRAM_FAILURE";
	m_errors[-CL_MAP_FAILURE] = "CL_MAP_FAILURE";
	m_errors[-CL_INVALID_VALUE] = "CL_INVALID_VALUE";
	m_errors[-CL_INVALID_DEVICE_TYPE] = "CL_INVALID_DEVICE_TYPE";
	m_errors[-CL_INVALID_PLATFORM] = "CL_INVALID_PLATFORM";
	m_errors[-CL_INVALID_DEVICE] = "CL_INVALID_DEVICE";
	m_errors[-CL_INVALID_CONTEXT] = "CL_INVALID_CONTEXT";
	m_errors[-CL_INVALID_QUEUE_PROPERTIES] = "CL_INVALID_QUEUE_PROPERTIES";
	m_errors[-CL_INVALID_COMMAND_QUEUE] = "CL_INVALID_COMMAND_QUEUE";
	m_errors[-CL_INVALID_HOST_PTR] = "CL_INVALID_HOST_PTR";
	m_errors[-CL_INVALID_MEM_OBJECT] = "CL_INVALID_MEM_OBJECT";
	m_errors[-CL_INVALID_IMAGE_FORMAT_DESCRIPTOR] = "CL_INVALID_IMAGE_FORMAT_DESCRIPTOR";
	m_errors[-CL_INVALID_IMAGE_SIZE] = "CL_INVALID_IMAGE_SIZE";
	m_errors[-CL_INVALID_SAMPLER] = "CL_INVALID_SAMPLER";
	m_errors[-CL_INVALID_BINARY] = "CL_INVALID_BINARY";
	m_errors[-CL_INVALID_BUILD_OPTIONS] = "CL_INVALID_BUILD_OPTIONS";
	m_errors[-CL_INVALID_PROGRAM] = "CL_INVALID_PROGRAM";
	m_errors[-CL_INVALID_PROGRAM_EXECUTABLE] = "CL_INVALID_PROGRAM_EXECUTABLE";
	m_errors[-CL_INVALID_KERNEL_NAME] = "CL_INVALID_KERNEL_NAME";
	m_errors[-CL_INVALID_KERNEL_DEFINITION] = "CL_INVALID_KERNEL_DEFINITION";
	m_errors[-CL_INVALID_KERNEL] = "CL_INVALID_KERNEL";
	m_errors[-CL_INVALID_ARG_INDEX] = "CL_INVALID_ARG_INDEX";
	m_errors[-CL_INVALID_ARG_VALUE] = "CL_INVALID_ARG_VALUE";
	m_errors[-CL_INVALID_ARG_SIZE] = "CL_INVALID_ARG_SIZE";
	m_errors[-CL_INVALID_KERNEL_ARGS] = "CL_INVALID_KERNEL_ARGS";
	m_errors[-CL_INVALID_WORK_DIMENSION] = "CL_INVALID_WORK_DIMENSION";
	m_errors[-CL_INVALID_WORK_GROUP_SIZE] = "CL_INVALID_WORK_GROUP_SIZE";
	m_errors[-CL_INVALID_WORK_ITEM_SIZE] = "CL_INVALID_WORK_ITEM_SIZE";
	m_errors[-CL_INVALID_GLOBAL_OFFSET] = "CL_INVALID_GLOBAL_OFFSET";
	m_errors[-CL_INVALID_EVENT_WAIT_LIST] = "CL_INVALID_EVENT_WAIT_LIST";
	m_errors[-CL_INVALID_EVENT] = "CL_INVALID_EVENT";
	m_errors[-CL_INVALID_OPERATION] = "CL_INVALID_OPERATION";
	m_errors[-CL_INVALID_GL_OBJECT] = "CL_INVALID_GL_OBJECT";
	m_errors[-CL_INVALID_BUFFER_SIZE] = "CL_INVALID_BUFFER_SIZE";
	m_errors[-CL_INVALID_MIP_LEVEL] = "CL_INVALID_MIP_LEVEL";
	m_errors[-CL_INVALID_GLOBAL_WORK_SIZE] = "CL_INVALID_GLOBAL_WORK_SIZE";
	m_errors[-CL_INVALID_IMAGE_DESCRIPTOR] = "CL_INVALID_IMAGE_DESCRIPTOR";
	m_errors[-CL_INVALID_COMPILER_OPTIONS] = "CL_INVALID_COMPILER_OPTIONS";
	m_errors[-CL_INVALID_LINKER_OPTIONS] = "CL_INVALID_LINKER_OPTIONS";
	m_errors[-CL_INVALID_DEVICE_PARTITION_COUNT] = "CL_INVALID_DEVICE_PARTITION_COUNT";
}


CLManager::~CLManager()
{
}
